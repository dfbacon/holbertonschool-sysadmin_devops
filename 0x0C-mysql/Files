Holberton School
My planning
My projects
My concepts
My batchmates
QA reviews I can make
My Captain's Logs
My Officers
My Speakers of the day
My Servers
My profile
0x0C. Mysql
 Sysadmin & Devops â€• Web stack

 by Sylvain Kalache

 Ongoing project - started 03-02-2017, must end by 03-03-2017 (in about 9 hours) - you're 0% done.

 Manual QA review must be done (request it when you are done on the project)

Readme

What is a database master slave cluster
MySQL master slave setup
Build a robust database backup strategy
man: mysqldump

What you should learn from this project

At the end of this project you are expected to be able to explain, without the help of Google:

What is a database slave
What is the purpose of a database slave
Why database backups need to be stored in different physical locations
What operation should you regularly perform to make sure that you database backup strategy actually works
Requirements

Allowed editors: vi, vim, emacs
All your files will be interpreted on Ubuntu 14.04 LTS
All your files should end with a new line
A README.md file, at the root of the folder of the project, is mandatory
All your Bash script files must be executable
Your Bash script must pass Shellcheck (version 0.3.3-1~ubuntu14.04.1 via apt-get) without any error
The first line of all your Bash scripts should be exactly #!/usr/bin/env bash
The second line of all your Bash scripts should be a comment explaining what is the script doing
Tasks
  Done?  
Help!
0. Setup a Master-Slave infrastructure using MySQL mandatory

Redundancy simply explained

Install and configure MySQL onweb-01 and web-02 so that they for a master-slave cluster.

Having a slave member on for your MySQL database has 2 advantages:

Redundancy: if you lose one of the database servers, you will still have another working one and a copy of your data
Load distribution: you can split the read operations between the 2 servers, allowing to reduce the load on the master member and improve query response speed
Requirements:

MySQL master must be hosted on web-01 - you do not need to specify the bind-address, you can just comment this parameter
MySQL slave must be hosted on web-02
Setup replication for the MySQL database named holberton
Provide your MySQL master configuration as answer file with the name 0-mysql_configuration_master
Provide your MySQL slave configuration as answer file with the name 0-mysql_configuration_slave
Create a MySQL user named holberton, password projectcorrection280hbtn with read access on replication status (the checker will use it to verify that replication is running fine)
Make sure that task #3 of your SSH project is completed for web-01 and web-02, the checker will connect to your servers to check MySQL status
Example:

ubuntu@web-01:~$ mysql -uholberton -p
Enter password: 
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 1467
Server version: 5.5.49-0ubuntu0.14.04.1-log (Ubuntu)

Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> show master status;
+------------------+----------+--------------------+------------------+
| File             | Position | Binlog_Do_DB       | Binlog_Ignore_DB |
+------------------+----------+--------------------+------------------+
| mysql-bin.000009 |      107 | holberton          |                  |
+------------------+----------+--------------------+------------------+
1 row in set (0.00 sec)

mysql> 


root@web-02:/home/ubuntu# mysql -uroot -p
Enter password: 
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 53
Server version: 5.5.49-0ubuntu0.14.04.1-log (Ubuntu)

Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> show slave status\G
*************************** 1. row ***************************
               Slave_IO_State: Waiting for master to send event
                  Master_Host: 158.69.68.78
                  Master_User: slave_user
                  Master_Port: 3306
                Connect_Retry: 60
              Master_Log_File: mysql-bin.000009
          Read_Master_Log_Pos: 107
               Relay_Log_File: mysql-relay-bin.000022
                Relay_Log_Pos: 253
        Relay_Master_Log_File: mysql-bin.000009
             Slave_IO_Running: Yes
            Slave_SQL_Running: Yes
              Replicate_Do_DB: 
          Replicate_Ignore_DB: 
           Replicate_Do_Table: 
       Replicate_Ignore_Table: 
      Replicate_Wild_Do_Table: 
  Replicate_Wild_Ignore_Table: 
                   Last_Errno: 0
                   Last_Error: 
                 Skip_Counter: 0
          Exec_Master_Log_Pos: 107
              Relay_Log_Space: 452
              Until_Condition: None
               Until_Log_File: 
                Until_Log_Pos: 0
           Master_SSL_Allowed: No
           Master_SSL_CA_File: 
           Master_SSL_CA_Path: 
              Master_SSL_Cert: 
            Master_SSL_Cipher: 
               Master_SSL_Key: 
        Seconds_Behind_Master: 0
Master_SSL_Verify_Server_Cert: No
                Last_IO_Errno: 0
                Last_IO_Error: 
               Last_SQL_Errno: 0
               Last_SQL_Error: 
  Replicate_Ignore_Server_Ids: 
             Master_Server_Id: 1
1 row in set (0.00 sec)

mysql> 

Repo:

GitHub repository: holbertonschool-sysadmin_devops
Directory: 0x0C-mysql
File: 0-mysql_configuration_master
Check your code?
  Done?  
Help!
1. MySQL backup mandatory

Flooded datacenter

What if the data center where both your master and slave database servers are hosted are down because of a power outage or even worse: flooding, fire? Then all your data would inaccessible or lost. That's why you want to backup and store them in a different system in another physical location. This can be achieved by dumping your MySQL data, compressing them and storing them in a different data center.

Write a Bash script that generates a MySQL dump and creates a compressed archive out of it.

Requirements:

The MySQL dump must contain all your MySQL databases
The MySQL dump must be named backup.sql
The MySQL dump file has to be compressed to a tar.gz archive
This archive must have the following name format: day-month-year.tar.gz
Example:

ubuntu@03-web-01:~$ ls
1-mysql_backup
ubuntu@03-web-01:~$ ./1-mysql_backup mydummypassword
backup.sql
ubuntu@03-web-01:~$ ls
01-03-2017.tar.gz  1-mysql_backup  backup.sql
ubuntu@03-web-01:~$ more backup.sql
-- MySQL dump 10.13  Distrib 5.5.54, for debian-linux-gnu (x86_64)
--
-- Host: localhost    Database:
-- ------------------------------------------------------
-- Server version   5.5.54-0ubuntu0.14.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Current Database: `holberton`
--

CREATE DATABASE /*!32312 IF NOT EXISTS*/ `holberton` /*!40100 DEFAULT CHARACTER SET latin1 */;

USE `holberton`;

--
-- Table structure for table `users`
--

DROP TABLE IF EXISTS `users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `users` (
  `id` int(6) unsigned NOT NULL AUTO_INCREMENT,
  `firstname` varchar(30) NOT NULL,
  `lastname` varchar(30) NOT NULL,
  `email` varchar(50) DEFAULT NULL,
  `reg_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;
ubuntu@03-web-01:~$
ubuntu@03-web-01:~$ file 01-03-2017.tar.gz
01-03-2017.tar.gz: gzip compressed data, from Unix, last modified: Wed Mar  1 23:38:09 2017
ubuntu@03-web-01:~$
Repo:

GitHub repository: holbertonschool-sysadmin_devops
Directory: 0x0C-mysql
File: 1-mysql_backup
